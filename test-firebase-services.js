// test-firebase-services.ts
// Test file for Firebase Services Integration
import { BulgarianCarServices, initializeEmulators } from './firebase-services.js';
async function testFirebaseServices() {
    console.log('üß™ Testing Firebase Services for Bulgarian Car Marketplace');
    try {
        // Initialize emulators for testing
        await initializeEmulators();
        // Test car addition
        console.log('üìù Testing car addition...');
        const carResult = await BulgarianCarServices.addCar({
            brand: 'BMW',
            model: 'X5',
            year: 2023,
            price: 85000,
            currency: 'BGN',
            location: '–°–æ—Ñ–∏—è',
            description: '–û—Ç–ª–∏—á–µ–Ω –∞–≤—Ç–æ–º–æ–±–∏–ª –≤ –ø–µ—Ä—Ñ–µ–∫—Ç–Ω–æ —Å—ä—Å—Ç–æ—è–Ω–∏–µ'
        });
        if (carResult.success) {
            console.log('‚úÖ Car added successfully:', carResult.id);
        }
        else {
            console.log('‚ùå Failed to add car:', carResult.error);
        }
        // Test car retrieval
        console.log('üîç Testing car retrieval...');
        const carsResult = await BulgarianCarServices.getCars({ brand: 'BMW' });
        if (carsResult.success) {
            console.log('‚úÖ Retrieved cars:', carsResult.cars?.length || 0);
        }
        else {
            console.log('‚ùå Failed to retrieve cars:', carsResult.error);
        }
        // Test remote config
        console.log('‚öôÔ∏è Testing remote config...');
        const maxImages = await BulgarianCarServices.getRemoteConfigValue('max_car_images');
        console.log('üìä Max car images from remote config:', maxImages);
        console.log('üéâ All Firebase services tests completed!');
    }
    catch (error) {
        console.error('‚ùå Test failed:', error);
    }
}
// Run tests if this file is executed directly
if (require.main === module) {
    testFirebaseServices();
}
export { testFirebaseServices };
